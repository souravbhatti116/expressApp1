# Important concepts of API.

1. Endpoint   
2. Path        
3. parameters (comes after ? symbol and seperated by & sign )
4. Authentication -

//
url =  'https://api.openweathermap.org/data/2.5/weather?zip=95132&appid=868fcdbfa624bd1a03c5daed99704840&units=imperial';

Open Weather map Key - 868fcdbfa624bd1a03c5daed99704840;
\\

JSON.parse - 

JSON.stringyfy - converts JSON Object to a string.

https.request(url[, options][, calback])

//** Mailchimp API Key - 8b92a8d6d3e26bbaebf965e091fa1acf-us14
//** Mailchimp unique ID - 021a135d8d

//Git and GitHub

Commands -  
// For local repos
1. git init -  creates .git file
2. git status - check the status of files in the staging area in the directory: tracked vs untracked changes.
3. git add - bring the file/files to the staging area. For all files in a folder ( git add .), for single or multiple files ( git add file1 file2 etc.)
4. git commit - keep the track of the changes during each commit. (-m "message for the changes.")
5. git log - shows the list of the commits made during the progress of the file.
6. git checkout - to revert the commits to the initial stage. 
** git rm --cached -r = unstage items from the git staging area.
** working directory =>(git add)=> staging area => (git commit) => local repo.

// For remote repos on github.
7. git remote add origin  <url of the repo> - to add the local repo to the staging area for the the remote repo.
8. git push -u origin master - push the local repo to the remote repo.
9. git branch -M main - creates the new branches for upload.

** working directory =>(git add)=> staging area => (git commit) => local repo. => (git push) => remote repo.


GitIgnore file - to ignore the classified files while pushing to the remote repo. (the files you dont want to be on the internet eg. API Keys etc.)

11. ni .gitignore - creates .gitignore file 
